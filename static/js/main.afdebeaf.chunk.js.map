{"version":3,"sources":["Header.js","MemeGenerator.js","App.js","index.js"],"names":["Header","className","MemeGenerator","state","upperText","lowerText","randomImg","allMemesImg","handleChange","e","target","name","value","setState","handleSubmit","preventDefault","randNum","Math","floor","random","length","randImg","url","fetch","then","response","json","data","memes","onSubmit","this","type","placeholder","onChange","src","alt","React","Component","App","ReactDOM","render","document","getElementById"],"mappings":"2NAUeA,MARf,WACE,OACE,yBAAKC,UAAU,UACb,gD,OC4DSC,E,4MA9DbC,MAAQ,CACNC,UAAW,GACXC,UAAW,GACXC,UAAW,mCACXC,YAAa,I,EAWfC,aAAe,SAACC,GAAO,IAAD,EACIA,EAAEC,OAAlBC,EADY,EACZA,KAAMC,EADM,EACNA,MACd,EAAKC,SAAL,eACGF,EAAOC,K,EAIZE,aAAe,SAACL,GACdA,EAAEM,iBACF,IAAMC,EAAUC,KAAKC,MAAMD,KAAKE,SAAW,EAAKhB,MAAMI,YAAYa,QAC5DC,EAAU,EAAKlB,MAAMI,YAAYS,GAASM,IAChD,EAAKT,SAAS,CACZP,UAAWe,K,kEApBM,IAAD,OAClBE,MAAM,qCACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACC,GACL,EAAKZ,SAAS,CAAEN,YAAakB,EAASE,KAAKC,a,+BAqB/C,OACE,yBAAK3B,UAAU,QACb,0BAAM4B,SAAUC,KAAKhB,aAAcb,UAAU,UAC3C,2BACE8B,KAAK,OACLC,YAAY,aACZrB,KAAK,YACLC,MAAOkB,KAAK3B,MAAMC,UAClB6B,SAAUH,KAAKtB,eAEjB,2BACEuB,KAAK,OACLC,YAAY,aACZrB,KAAK,YACLC,MAAOkB,KAAK3B,MAAME,UAClB4B,SAAUH,KAAKtB,eAEjB,6CAGF,yBAAKP,UAAU,QACb,yBAAKiC,IAAKJ,KAAK3B,MAAMG,UAAW6B,IAAI,KACpC,wBAAIlC,UAAU,OAAO6B,KAAK3B,MAAMC,WAChC,wBAAIH,UAAU,UAAU6B,KAAK3B,MAAME,iB,GAxDjB+B,IAAMC,WCgBnBC,E,uKAZX,OACE,yBAAKrC,UAAU,aACb,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,wBAAIA,UAAU,QAAd,OACM,oD,GAPImC,IAAMC,WCCxBE,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.afdebeaf.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Header() {\n  return (\n    <div className=\"header\">\n      <h1>Meme Generator</h1>\n    </div>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\n\nclass MemeGenerator extends React.Component {\n  state = {\n    upperText: \"\",\n    lowerText: \"\",\n    randomImg: \"https://i.imgflip.com/30b1gx.jpg\",\n    allMemesImg: [],\n  };\n\n  componentDidMount() {\n    fetch(\"https://api.imgflip.com/get_memes\")\n      .then((response) => response.json())\n      .then((response) => {\n        this.setState({ allMemesImg: response.data.memes });\n      });\n  }\n\n  handleChange = (e) => {\n    const { name, value } = e.target;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const randNum = Math.floor(Math.random() * this.state.allMemesImg.length);\n    const randImg = this.state.allMemesImg[randNum].url;\n    this.setState({\n      randomImg: randImg,\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"meme\">\n        <form onSubmit={this.handleSubmit} className=\"myForm\">\n          <input\n            type=\"text\"\n            placeholder=\"Upper text\"\n            name=\"upperText\"\n            value={this.state.upperText}\n            onChange={this.handleChange}\n          ></input>\n          <input\n            type=\"text\"\n            placeholder=\"Lower text\"\n            name=\"lowerText\"\n            value={this.state.lowerText}\n            onChange={this.handleChange}\n          ></input>\n          <button>Generate</button>\n        </form>\n\n        <div className=\"meme\">\n          <img src={this.state.randomImg} alt=\"\" />\n          <h2 className=\"top\">{this.state.upperText}</h2>\n          <h2 className=\"bottom\">{this.state.lowerText}</h2>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default MemeGenerator;\n","import React from \"react\";\nimport Header from \"./Header\";\nimport MemeGenerator from \"./MemeGenerator\";\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div className=\"container\">\n        <Header />\n        <MemeGenerator />\n        <h1 className=\"sign\">\n          By: <span>Manish Kumar</span>\n        </h1>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./style.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}